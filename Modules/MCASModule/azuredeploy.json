{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Get-MCASInvestigationScore",
            "type": "String"
        },
        "API KEY": {
            "defaultValue": "Type your API Key",
            "type": "String"
        },
        "MCAS API URL": {
            "defaultValue": "Type your API URL",
            "type": "String"
        }
    },
    "variables": {
        "KeyVaultName": "[concat( 'MCAS-Vault-', uniqueString(resourceGroup().id))]",
        "LogicAppName": "[parameters('PlaybookName')]",
        "AzureSentinelConnectionName":"[concat('azuresentinel-', parameters('PlaybookName'))]",
        "AzureKeyVaultConnectionName":"[concat('azurekeyvault-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults/accessPolicies",
            "apiVersion": "2016-10-01",
            "name": "[concat(variables('KeyVaultName'), '/add')]",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', variables('LogicAppName'))]"
            ],
            "properties": {
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.Logic/workflows', variables('LogicAppName')), '2019-05-01', 'full').identity.principalId]",
                        "permissions": {
                            "secrets": [
                                "Get",
                                "List"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2016-10-01",
            "name": "[variables('KeyVaultName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true,
                "accessPolicies": [
                ]
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureKeyVaultConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureKeyVaultConnectionName')]",
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                    "vaultName": "[variables('KeyVaultName')]"
                },                
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
                },
                "testLinks": []
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2021-06-01-preview",
            "name": "[concat(variables('KeyVaultName'), '/MCASAPIKEY')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]"
            ],
            "properties": {
                "value": "[parameters('API KEY')]",
                "contentType": "string",
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('AzureKeyVaultConnectionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                    "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Compose_final_response": {
                            "inputs": {
                                "AboveThreholdCount": "@length(body('Filter_scores_above_the_threshold'))",
                                "AnalyzedEntities": "@length(variables('DetailedResults'))",
                                "DetailedResults": "@variables('DetailedResults')",
                                "MaximumScore": "@max(variables('Scores'))"
                            },
                            "runAfter": {
                                "Filter_scores_above_the_threshold": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose"
                        },
                        "Condition_-_Check_if_comment_is_required": {
                            "actions": {
                                "Add_MCAS_score_in_a_comment": {
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['IncidentARMId']",
                                            "message": "<p>MCAS Users' investigation priority scores per user: @{body('Create_HTML_table_for_comment')}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    },
                                    "runAfter": {
                                        "Create_HTML_table_for_comment": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection"
                                },
                                "Create_HTML_table_for_comment": {
                                    "inputs": {
                                        "format": "HTML",
                                        "from": "@variables('DetailedResults')"
                                    },
                                    "runAfter": {},
                                    "type": "Table"
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['AddIncidentComments']",
                                            "@true"
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Compose_final_response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_-_Terminate_if_no_accounts": {
                            "actions": {
                                "Response_-_No_Account_Entities": {
                                    "inputs": {
                                        "body": {
                                            "AnalyzedEntities": 0,
                                            "DetailedResults": [],
                                            "MaximumScore": 0,
                                            "UnderThreholdCount": 0
                                        },
                                        "schema": {
                                            "properties": {
                                                "AboveThreholdCount": {
                                                    "type": "integer"
                                                },
                                                "AnalyzedEntities": {
                                                    "type": "integer"
                                                },
                                                "DetailedResults": {
                                                    "items": {
                                                        "properties": {
                                                            "ThreatScore": {
                                                                "type": "integer"
                                                            },
                                                            "UserId": {
                                                                "type": "string"
                                                            },
                                                            "UserPrincipalName": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "MaximumScore": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "statusCode": 200
                                    },
                                    "kind": "Http",
                                    "runAfter": {},
                                    "type": "Response"
                                },
                                "Terminate": {
                                    "inputs": {
                                        "runStatus": "Succeeded"
                                    },
                                    "runAfter": {
                                        "Response_-_No_Account_Entities": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Terminate"
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['Entities']['AccountsCount']",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_DetailedResults": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "Filter_array_-_Get_only_accounts_with_id": {
                            "inputs": {
                                "from": "@triggerBody()?['Entities']['Accounts']",
                                "where": "@greater(length(coalesce(item()?['id'], '')), 0)"
                            },
                            "runAfter": {
                                "Condition_-_Terminate_if_no_accounts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query"
                        },
                        "Filter_scores_above_the_threshold": {
                            "inputs": {
                                "from": "@variables('Scores')",
                                "where": "@greater(item(), triggerBody()?['ScoreThreshold'])"
                            },
                            "runAfter": {
                                "For_each_account": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query"
                        },
                        "For_each_account": {
                            "actions": {
                                "Compose_PkUser": {
                                    "inputs": {
                                        "id": "@{items('For_each_account')['id']}",
                                        "inst": 0,
                                        "saas": 11161
                                    },
                                    "runAfter": {},
                                    "type": "Compose"
                                },
                                "Condition_-_Check_MCAS_API_Results": {
                                    "actions": {
                                        "Update_DetailedResults_array": {
                                            "inputs": {
                                                "name": "DetailedResults",
                                                "value": {
                                                    "ThreatScore": "@coalesce(body('HTTP_-_MCAS_API_Call')['threatScore'],0)",
                                                    "UserId": "@{items('For_each_account')['id']}",
                                                    "UserPrincipalName": "@{coalesce(item()?['UserPrincipalName'],null)}"
                                                }
                                            },
                                            "runAfter": {
                                                "Update_Scores_array": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToArrayVariable"
                                        },
                                        "Update_Scores_array": {
                                            "inputs": {
                                                "name": "Scores",
                                                "value": "@coalesce(body('HTTP_-_MCAS_API_Call')['threatScore'],0)"
                                            },
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable"
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@outputs('HTTP_-_MCAS_API_Call')['statusCode']",
                                                    200
                                                ]
                                            }
                                        ]
                                    },
                                    "runAfter": {
                                        "HTTP_-_MCAS_API_Call": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "If"
                                },
                                "HTTP_-_MCAS_API_Call": {
                                    "inputs": {
                                        "headers": {
                                            "Authorization": "Token @{body('Get_MCAS_API_secret')?['value']}"
                                        },
                                        "method": "GET",
                                        "uri": "@{variables('MCAS_API_URL')}/api/v1/entities/@{base64(outputs('Compose_PkUser'))}/"
                                    },
                                    "runAfter": {
                                        "Compose_PkUser": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http"
                                }
                            },
                            "foreach": "@body('Filter_array_-_Get_only_accounts_with_id')",
                            "runAfter": {
                                "Filter_array_-_Get_only_accounts_with_id": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_MCAS_API_secret": {
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('MCASAPIKey')}/value"
                            },
                            "runAfter": {
                                "Initialize_MCAS_API_URL": [
                                    "Succeeded"
                                ]
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "outputs"
                                    ]
                                }
                            },
                            "type": "ApiConnection"
                        },
                        "Initialize_DetailedResults": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "DetailedResults",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_Scores_array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_MCAS_API_URL": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "MCAS_API_URL",
                                        "type": "string",
                                        "value": "[parameters('MCAS API URL')]"
                                    }
                                ]
                            }
                        },
                        "Initialize_Scores_array": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Scores",
                                        "type": "array",
                                        "value": [
                                            0
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Get_MCAS_API_secret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Return_final_response": {
                            "inputs": {
                                "body": "@outputs('Compose_final_response')",
                                "schema": {
                                    "properties": {
                                        "AboveThreholdCount": {
                                            "type": "integer"
                                        },
                                        "AnalyzedEntities": {
                                            "type": "integer"
                                        },
                                        "DetailedResults": {
                                            "items": {
                                                "properties": {
                                                    "ThreatScore": {
                                                        "type": "integer"
                                                    },
                                                    "UserId": {
                                                        "type": "string"
                                                    },
                                                    "UserPrincipalName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "MaximumScore": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "statusCode": 200
                            },
                            "kind": "Http",
                            "runAfter": {
                                "Condition_-_Check_if_comment_is_required": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "triage": {
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "AddIncidentComments": {
                                            "title": "Add comments to the incident",
                                            "type": "boolean"
                                        },
                                        "Entities": {
                                            "description": "Click here and select the Entities object from the Dynamic content menu",
                                            "type": "array"
                                        },
                                        "ScoreThreshold": {
                                            "description": "Type the minimum investigation Score",
                                            "title": "Investigation Score Threshold",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "kind": "Http",
                            "type": "Request"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            },
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureKeyVaultConnectionName'))]",
                                "connectionName": "[variables('AzureKeyVaultConnectionName')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "resourceID": {
            "type": "string",
            "value": "[resourceId('Microsoft.Logic/workflows', parameters('PlaybookName'))]"
        }
    }
}
