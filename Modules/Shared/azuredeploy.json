{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Enrich-Entities",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "EnrichIPsWithGeoData": {
                                            "type": "boolean"
                                        },
                                        "Entities": {
                                            "type": "array"
                                        },
                                        "IncidentARMId": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Compose": {
                            "runAfter": {
                                "For_each_account": [
                                    "Succeeded",
                                    "Failed"
                                ],
                                "For_each_host": [
                                    "Succeeded",
                                    "Failed"
                                ],
                                "For_each_ip": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "type": "Compose",
                            "inputs": {
                                "Accounts": "@variables('AccountsArray')",
                                "AccountsAllValid": "@equals(length(variables('AccountsArray')), length(body('Filter_array_-_Accounts')))",
                                "AccountsInput": "@length(body('Filter_array_-_Accounts'))",
                                "AccountsValid": "@length(variables('AccountsArray'))",
                                "EntitiesAllValid": "@and(and(equals(length(variables('AccountsArray')), length(body('Filter_array_-_Accounts'))),equals(length(body('Filter_array_-_Hosts')), length(variables('HostArray')))),equals(length(body('Filter_array_-_IPs')), length(variables('IPArray'))))",
                                "EntitiesInput": "@add(add(length(body('Filter_array_-_Accounts')),length(body('Filter_array_-_Hosts'))),length(body('Filter_array_-_IPs')))",
                                "EntitiesValid": "@add(add(length(variables('AccountsArray')),length(variables('HostArray'))),length(variables('IPArray')))",
                                "Hosts": "@variables('HostArray')",
                                "HostsAllValid": "@equals(length(body('Filter_array_-_Hosts')), length(variables('HostArray')))",
                                "HostsInput": "@length(body('Filter_array_-_Hosts'))",
                                "HostsValid": "@length(variables('HostArray'))",
                                "IPs": "@variables('IPArray')",
                                "IPsAllValid": "@equals(length(body('Filter_array_-_IPs')), length(variables('IPArray')))",
                                "IPsInput": "@length(body('Filter_array_-_IPs'))",
                                "IPsValid": "@length(variables('IPArray'))"
                            }
                        },
                        "Filter_array_-_Accounts": {
                            "runAfter": {},
                            "type": "Query",
                            "inputs": {
                                "from": "@triggerBody()?['Entities']",
                                "where": "@equals(toLower(item()['kind']), 'account')"
                            }
                        },
                        "Filter_array_-_Hosts": {
                            "runAfter": {},
                            "type": "Query",
                            "inputs": {
                                "from": "@triggerBody()?['Entities']",
                                "where": "@equals(toLower(item()['kind']), 'host')"
                            }
                        },
                        "Filter_array_-_IPs": {
                            "runAfter": {},
                            "type": "Query",
                            "inputs": {
                                "from": "@triggerBody()?['Entities']",
                                "where": "@equals(toLower(item()['kind']), 'ip')"
                            }
                        },
                        "For_each_account": {
                            "foreach": "@body('Select_Accounts')",
                            "actions": {
                                "Append_to_AccountArray": {
                                    "runAfter": {
                                        "Compose_User": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "AccountsArray",
                                        "value": "@outputs('Compose_User')"
                                    }
                                },
                                "Compose_User": {
                                    "runAfter": {
                                        "Select_Roles": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "@addProperty(coalesce(body('HTTP_-_UPN')?['value'][0],body('HTTP_-_AADId')?['value'][0],body('HTTP_-_ObjectSid')?['value'][0],body('HTTP_-_SamAccountName')?['value'][0],body('HTTP_-_DistinguishedName')?['value'][0]), 'AssignedRoles', body('Select_Roles'))"
                                },
                                "HTTP_-_Roles": {
                                    "runAfter": {
                                        "Switch": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://graph.microsoft.com",
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "method": "GET",
                                        "uri": "https://graph.microsoft.com/v1.0/roleManagement/directory/roleAssignments?$filter=principalId%20eq%20'@{coalesce(body('HTTP_-_UPN')?['value'][0]['id'],body('HTTP_-_AADId')?['value'][0]['id'],body('HTTP_-_ObjectSid')?['value'][0]['id'],body('HTTP_-_SamAccountName')?['value'][0]['id'],body('HTTP_-_DistinguishedName')?['value'][0]['id'])}'&$expand=roleDefinition"
                                    }
                                },
                                "Select_Roles": {
                                    "runAfter": {
                                        "HTTP_-_Roles": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Select",
                                    "inputs": {
                                        "from": "@body('HTTP_-_Roles')['value']",
                                        "select": {
                                            "Role": "@item()['roleDefinition']['displayName']"
                                        }
                                    }
                                },
                                "Switch": {
                                    "runAfter": {},
                                    "cases": {
                                        "Case_-_AADId": {
                                            "case": "AADId",
                                            "actions": {
                                                "HTTP_-_AADId": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/v1.0/users?$filter=(id%20eq%20'@{items('For_each_account')['aadUserId']}')&$select=@{variables('SelectProperties')}"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_-_DistinguishedName": {
                                            "case": "DistinguishedName",
                                            "actions": {
                                                "HTTP_-_DistinguishedName": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/beta/users?$filter=(onPremisesDistinguishedName%20eq%20'@{items('For_each_account')['accountName']}')&$select=@{variables('SelectProperties')}"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_-_ObjectSid": {
                                            "case": "ObjectSid",
                                            "actions": {
                                                "HTTP_-_ObjectSid": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/v1.0/users?$filter=(onPremisesSecurityIdentifier%20eq%20'@{items('For_each_account')['sid']}')&$select=@{variables('SelectProperties')}"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_-_SamAccountName": {
                                            "case": "SamAccountName",
                                            "actions": {
                                                "Filter_array": {
                                                    "runAfter": {
                                                        "HTTP_-_SamAccountName": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Query",
                                                    "inputs": {
                                                        "from": "@body('HTTP_-_SamAccountName')['value']",
                                                        "where": "@and(equals(item()['onPremisesSamAccountName'], items('For_each_account')['accountName']),equals(toUpper(split(item()['onPremisesDomainName'], '.')[0]), items('For_each_account')['ntDomain']))"
                                                    }
                                                },
                                                "HTTP_-_SamAccountName": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/beta/users?$filter=mailNickname%20eq%20'@{items('For_each_account')['accountName']}'%20or%20startswith(onPremisesUserPrincipalName,'@{items('For_each_account')['accountName']}')&$select=@{variables('SelectProperties')}"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_-_UPN": {
                                            "case": "UPN",
                                            "actions": {
                                                "HTTP_-_UPN": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/v1.0/users?$filter=(userPrincipalName%20eq%20'@{concat(item()['accountName'], '@', item()['upnSuffix'])}')&$select=@{variables('SelectProperties')}"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "actions": {}
                                    },
                                    "expression": "@item()['accountType']",
                                    "type": "Switch"
                                }
                            },
                            "runAfter": {
                                "Initialize_Select_Properties": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_host": {
                            "foreach": "@body('Filter_array_-_Hosts')",
                            "actions": {
                                "Append_to_array_variable": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "HostArray",
                                        "value": {
                                            "DnsDomain": "@{item()['properties']?['dnsDomain']}",
                                            "FQDN": "@{concat(item()['properties']['hostName'], '.', item()['properties']?['dnsDomain'])}",
                                            "Hostname": "@{item()['properties']['hostName']}"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_HostArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_ip": {
                            "foreach": "@body('Filter_array_-_IPs')",
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Append_to_IPArray_With_GeoData": {
                                            "runAfter": {
                                                "HTTP_-_Get_Geo_Data": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "IPArray",
                                                "value": {
                                                    "Address": "@{items('For_each_ip')['properties']['address']}",
                                                    "GeoData": "@body('HTTP_-_Get_Geo_Data')"
                                                }
                                            }
                                        },
                                        "HTTP_-_Get_Geo_Data": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://management.azure.com",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "method": "GET",
                                                "queries": {
                                                    "api-version": "2019-01-01-preview",
                                                    "ipaddress": "@{items('For_each_ip')['properties']['address']}"
                                                },
                                                "uri": "https://management.azure.com@{split(triggerBody()?['IncidentARMId'], '/providers/')[0]}/providers/Microsoft.SecurityInsights/enrichment/ip/geodata/"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "else": {
                                        "actions": {
                                            "Append_to_IPArray_Without_GeoData": {
                                                "runAfter": {},
                                                "type": "AppendToArrayVariable",
                                                "inputs": {
                                                    "name": "IPArray",
                                                    "value": {
                                                        "Address": "@{items('For_each_ip')['properties']['address']}",
                                                        "GeoData": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@triggerBody()?['EnrichIPsWithGeoData']",
                                                    true
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Initialize_IPArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_AccountsArray": {
                            "runAfter": {
                                "Select_Accounts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "AccountsArray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_HostArray": {
                            "runAfter": {
                                "Filter_array_-_Hosts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "HostArray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_IPArray": {
                            "runAfter": {
                                "Filter_array_-_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IPArray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_Select_Properties": {
                            "runAfter": {
                                "Initialize_AccountsArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "SelectProperties",
                                        "type": "string",
                                        "value": "userPrincipalName,id,onPremisesSecurityIdentifier,onPremisesDistinguishedName,onPremisesDomainName,onPremisesSamAccountName,onPremisesSyncEnabled,mail,city,state,country,department,jobTitle,officeLocation&$expand=manager($select=userPrincipalName,mail,id)"
                                    }
                                ]
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Compose": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": "@outputs('Compose')",
                                "statusCode": 200
                            }
                        },
                        "Select_Accounts": {
                            "runAfter": {
                                "Filter_array_-_Accounts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Select",
                            "inputs": {
                                "from": "@body('Filter_array_-_Accounts')",
                                "select": {
                                    "aadUserId": "@item()['properties']?['aadUserId']",
                                    "accountName": "@item()['properties']?['accountName']",
                                    "accountType": "@if(not(empty(item()['properties']?['upnSuffix'])), 'UPN', if(not(empty(item()['properties']?['aadUserId'])), 'AADId', if(not(empty(item()['properties']?['sid'])), 'ObjectSid', if(not(empty(item()['properties']?['ntDomain'])), 'SamAccountName', if(contains(item()['properties']?['accountName'], ',DC='), 'DistinguishedName', 'Unknown')))))",
                                    "ntDomain": "@item()['properties']?['ntDomain']",
                                    "sid": "@item()['properties']?['sid']",
                                    "upnSuffix": "@item()['properties']?['upnSuffix']"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        }
    ],
    "outputs": {
        "resourceID": {
            "type": "string",
            "value": "[resourceId('Microsoft.Logic/workflows', parameters('PlaybookName'))]"
        }
    }
}