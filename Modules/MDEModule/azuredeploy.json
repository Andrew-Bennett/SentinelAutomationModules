{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Get-MDEUsersDevicesRiskScore",
            "type": "String"
        }
    },
    "variables": {
        "AzureSentinelConnectionName":"[concat('azuresentinel-', parameters('PlaybookName'))]",
        "DefenderConnectionName":"[concat('defender-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('DefenderConnectionName')]",
            "location": "canadacentral",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('DefenderConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/wdatp')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('DefenderConnectionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "triage": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "AddIncidentComments": {
                                            "title": "Add comments to the incident",
                                            "type": "boolean"
                                        },
                                        "Entities": {
                                            "description": "Click here and select the EnrichedEntities object from the Dynamic content menu",
                                            "title": "Enriched Entities",
                                            "type": "array"
                                        },
                                        "LookbackInDays": {
                                            "description": "Enter a value between 1 and 30",
                                            "maximum": 30,
                                            "minimum": 1,
                                            "title": "Lookback period in days",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Compose_response": {
                            "runAfter": {
                                "Create_table_to_check_IPsHighestExposureLevel": [
                                    "Succeeded"
                                ],
                                "Create_table_to_check_UsersHighestExposureLevel": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": {
                                "AnalyzedEntities": "@add(length(variables('DetailedResultsIPs')),length(variables('DetailedResultsAccounts')))",
                                "DetailedResults": {
                                    "Accounts": "@variables('DetailedResultsAccounts')",
                                    "IPs": "@variables('DetailedResultsIPs')"
                                },
                                "IPsHighestExposureLevel": "@{if(contains(body('Create_table_to_check_IPsHighestExposureLevel'), 'High'), 'High', if(contains(body('Create_table_to_check_IPsHighestExposureLevel'), 'Medium'), 'Medium', if(contains(body('Create_table_to_check_IPsHighestExposureLevel'), 'Low'), 'Low', if(contains(body('Create_table_to_check_IPsHighestExposureLevel'), 'None'),'None','Unknown'))))}",
                                "IPsHighestRiskScore": "@{if(contains(body('Create_table_to_check_IPsHighestRiskScore'), 'High'), 'High', if(contains(body('Create_table_to_check_IPsHighestRiskScore'), 'Medium'), 'Medium', if(contains(body('Create_table_to_check_IPsHighestRiskScore'), 'Low'), 'Low', if(contains(body('Create_table_to_check_IPsHighestRiskScore'), 'Informational'), 'Informational', if(contains(body('Create_table_to_check_IPsHighestRiskScore'), 'None'), 'None', 'Unknown')))))}",
                                "UsersHighestExposureLevel": "@{if(contains(body('Create_table_to_check_UsersHighestExposureLevel'), 'High'), 'High', if(contains(body('Create_table_to_check_UsersHighestExposureLevel'), 'Medium'), 'Medium', if(contains(body('Create_table_to_check_UsersHighestExposureLevel'), 'Low'), 'Low', if(contains(body('Create_table_to_check_UsersHighestExposureLevel'), 'None'),'None','Unknown'))))}",
                                "UsersHighestRiskScore": "@{if(contains(body('Create_table_to_check_UsersHighestRiskScore'), 'High'), 'High', if(contains(body('Create_table_to_check_UsersHighestRiskScore'), 'Medium'), 'Medium', if(contains(body('Create_table_to_check_UsersHighestRiskScore'), 'Low'), 'Low', if(contains(body('Create_table_to_check_UsersHighestRiskScore'), 'Informational'), 'Informational', if(contains(body('Create_table_to_check_UsersHighestRiskScore'), 'None'), 'None', 'Unknown')))))}"
                            }
                        },
                        "Condition_-_Add_comment": {
                            "actions": {
                                "Add_comment_to_incident_(V3)": {
                                    "runAfter": {
                                        "For_each_DetailedResultsIPs": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['Entities']['IncidentARMId']",
                                            "message": "<p>Lookback in days: @{triggerBody()?['LookbackInDays']}</p><strong>Account Info</strong><br/><ul><li>Users Highest Risk Score: @{outputs('Compose_response')['UsersHighestRiskScore']}</li><li>Users Highest Exposure Level: @{outputs('Compose_response')['UsersHighestExposureLevel']}</li><li>List of users and devices: <ul>@{outputs('Compose_UserDevices_output')}</ul></li></ul><strong>IP Info</strong><br/><br/><ul><li>IP Highest Risk Score: @{outputs('Compose_response')['IPsHighestRiskScore']}</li><li>IP Highest Exposure Level: @{outputs('Compose_response')['IPsHighestExposureLevel']}</li><li>List of IP and devices: <ul>@{variables('Comments')}</ul></li></ul>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Compose_UserDevices_output": {
                                    "runAfter": {
                                        "For_each_DetailedResultsAccounts": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "@variables('Comments')"
                                },
                                "For_each_DetailedResultsAccounts": {
                                    "foreach": "@variables('DetailedResultsAccounts')",
                                    "actions": {
                                        "Append_to_string_variable_Comments": {
                                            "runAfter": {
                                                "Create_HTML_table_for_UserDevices": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "Comments",
                                                "value": "<li>@{if(not(equals(item()['UserPrincipalName'], '')), item()['UserPrincipalName'], item()['UserSid'])} @{if(equals(length(items('For_each_DetailedResultsAccounts')['UserDevices']),0),' - No devices found',body('Create_HTML_table_for_UserDevices'))}</li>"
                                            }
                                        },
                                        "Create_HTML_table_for_UserDevices": {
                                            "runAfter": {},
                                            "type": "Table",
                                            "inputs": {
                                                "format": "HTML",
                                                "from": "@items('For_each_DetailedResultsAccounts')['UserDevices']"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                },
                                "For_each_DetailedResultsIPs": {
                                    "foreach": "@variables('DetailedResultsIPs')",
                                    "actions": {
                                        "Append_to_string_variable_Comments_again": {
                                            "runAfter": {
                                                "Create_HTML_table_for_IPDevices": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "Comments",
                                                "value": "<li>@{items('For_each_DetailedResultsIPs')['Address']}@{if(equals(length(items('For_each_DetailedResultsIPs')['IPDevices']),0),' - No devices found',body('Create_HTML_table_for_IPDevices'))}</li>"
                                            }
                                        },
                                        "Create_HTML_table_for_IPDevices": {
                                            "runAfter": {},
                                            "type": "Table",
                                            "inputs": {
                                                "format": "HTML",
                                                "from": "@item()['IPDevices']"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Reset_variable_Comments": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                },
                                "Reset_variable_Comments": {
                                    "runAfter": {
                                        "Compose_UserDevices_output": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Comments",
                                        "value": "@{null}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Compose_response": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['AddIncidentComments']",
                                            "@true"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_-_Terminate_if_no_supported_entities": {
                            "actions": {
                                "Response_-_Send_empty_results": {
                                    "runAfter": {},
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "body": {
                                            "AnalyzedEntities": 0,
                                            "DetailedResults": [],
                                            "IPsHighestExposureLevel": "Unknown",
                                            "IPsHighestRiskScore": "Unknown",
                                            "UsersHighestExposureLevel": "Unknown",
                                            "UsersHighestRiskScore": "Unknown"
                                        },
                                        "statusCode": 200
                                    }
                                },
                                "Terminate": {
                                    "runAfter": {
                                        "Response_-_Send_empty_results": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Terminate",
                                    "inputs": {
                                        "runStatus": "Succeeded"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_Comments": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['Entities']['AccountsCount']",
                                            0
                                        ]
                                    },
                                    {
                                        "equals": [
                                            "@triggerBody()?['Entities']['IPsCount']",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Create_table_to_check_IPsHighestExposureLevel": {
                            "runAfter": {
                                "Create_table_to_check_IPsHighestRiskScore": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "columns": [
                                    {
                                        "header": "",
                                        "value": "@item()['IPHighestExposureLevel']"
                                    }
                                ],
                                "format": "CSV",
                                "from": "@variables('DetailedResultsIPs')"
                            }
                        },
                        "Create_table_to_check_IPsHighestRiskScore": {
                            "runAfter": {
                                "For_each_IP_in_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "columns": [
                                    {
                                        "header": "",
                                        "value": "@item()['IPHighestRiskScore']"
                                    }
                                ],
                                "format": "CSV",
                                "from": "@variables('DetailedResultsIPs')"
                            }
                        },
                        "Create_table_to_check_UsersHighestExposureLevel": {
                            "runAfter": {
                                "Create_table_to_check_UsersHighestRiskScore": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "columns": [
                                    {
                                        "header": "",
                                        "value": "@item()['UserHighestExposureLevel']"
                                    }
                                ],
                                "format": "CSV",
                                "from": "@variables('DetailedResultsAccounts')"
                            }
                        },
                        "Create_table_to_check_UsersHighestRiskScore": {
                            "runAfter": {
                                "For_each_account": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "columns": [
                                    {
                                        "header": "",
                                        "value": "@item()?['UserHighestRiskScore']"
                                    }
                                ],
                                "format": "CSV",
                                "from": "@variables('DetailedResultsAccounts')"
                            }
                        },
                        "Filter_array_-_Get_only_account_with_a_onPremisesSecurityIdentifier_or_sid": {
                            "runAfter": {
                                "Condition_-_Terminate_if_no_supported_entities": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@triggerBody()?['Entities']['Accounts']",
                                "where": "@greater(add(length(coalesce(item()?['onPremisesSecurityIdentifier'], '')), length(coalesce(item()?['RawEntity']?['sid'], ''))), 0)"
                            }
                        },
                        "For_each_IP_in_IPs": {
                            "foreach": "@triggerBody()?['Entities']['IPs']",
                            "actions": {
                                "Advanced_Hunting_-_IP_path": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "Query": "let IPLookUp = \"@{items('For_each_IP_in_IPs')['Address']}\";\nDeviceNetworkInfo\n| where Timestamp > ago(@{triggerBody()?['LookbackInDays']}d)\n| summarize arg_max(Timestamp,*) by DeviceId\n| extend IPs = todynamic(IPAddresses)\n| mv-expand IPs\n| evaluate bag_unpack(IPs)\n| where IPAddress == IPLookUp\n| summarize ListIds=make_list(DeviceId)\n| project List=array_concat(ListIds,pack_array(\"default\"))"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['wdatp']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/api/advancedqueries/run"
                                    }
                                },
                                "Append_to_array_variable_DetailedResultsIPs": {
                                    "runAfter": {
                                        "Create_table_to_check_IPHighestExposureLevel": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "DetailedResultsIPs",
                                        "value": {
                                            "Address": "@{items('For_each_IP_in_IPs')['Address']}",
                                            "IPDevices": "@body('Machines_-_Get_list_of_machines_-_IP_path')?['value']",
                                            "IPHighestExposureLevel": "@{if(contains(body('Create_table_to_check_IPHighestExposureLevel'), 'High'), 'High', if(contains(body('Create_table_to_check_IPHighestExposureLevel'), 'Medium'), 'Medium', if(contains(body('Create_table_to_check_IPHighestExposureLevel'), 'Low'), 'Low', if(contains(body('Create_table_to_check_IPHighestExposureLevel'), 'None'),'None','Unknown'))))}",
                                            "IPHighestRiskScore": "@{if(contains(body('Create_table_to_check_IpHighestRiskScore'), 'High'), 'High', if(contains(body('Create_table_to_check_IpHighestRiskScore'), 'Medium'), 'Medium', if(contains(body('Create_table_to_check_IpHighestRiskScore'), 'Low'), 'Low', if(contains(body('Create_table_to_check_IpHighestRiskScore'), 'Informational'), 'Informational', if(contains(body('Create_table_to_check_IpHighestRiskScore'), 'None'), 'None', 'Unknown')))))}"
                                        }
                                    }
                                },
                                "Create_table_to_check_IPHighestExposureLevel": {
                                    "runAfter": {
                                        "Create_table_to_check_IPHighestRiskScore": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Table",
                                    "inputs": {
                                        "columns": [
                                            {
                                                "header": "",
                                                "value": "@item()['exposureLevel']"
                                            }
                                        ],
                                        "format": "CSV",
                                        "from": "@body('Machines_-_Get_list_of_machines_-_IP_path')?['value']"
                                    }
                                },
                                "Create_table_to_check_IPHighestRiskScore": {
                                    "runAfter": {
                                        "Machines_-_Get_list_of_machines_-_IP_path": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Table",
                                    "inputs": {
                                        "columns": [
                                            {
                                                "header": "",
                                                "value": "@item()?['riskScore']"
                                            }
                                        ],
                                        "format": "CSV",
                                        "from": "@body('Machines_-_Get_list_of_machines_-_IP_path')?['value']"
                                    }
                                },
                                "Machines_-_Get_list_of_machines_-_IP_path": {
                                    "runAfter": {
                                        "Advanced_Hunting_-_IP_path": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['wdatp']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/api/machines",
                                        "queries": {
                                            "$filter": "id in (\"@{join(body('Advanced_Hunting_-_IP_path')?['Results'][0]['List'],'\",\"')}\")",
                                            "$select": "id,computerDnsName,riskScore,exposureLevel"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Condition_-_Terminate_if_no_supported_entities": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_account": {
                            "foreach": "@body('Filter_array_-_Get_only_account_with_a_onPremisesSecurityIdentifier_or_sid')",
                            "actions": {
                                "Advanced_Hunting_-_SID_path": {
                                    "runAfter": {
                                        "Compose_UserHighestScore": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "Query": "DeviceLogonEvents \n| where Timestamp > ago(@{triggerBody()?['LookbackInDays']}d)\n| where LogonType in (\"Interactive\",\"RemoteInteractive\")\n| where AccountSid == \"@{coalesce(item()?['RawEntity']?['sid'],item()?['onPremisesSecurityIdentifier'])}\" \n| distinct DeviceId\n| summarize ListIds=make_list(DeviceId)\n| project List=array_concat(ListIds,pack_array(\"default\"))"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['wdatp']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/api/advancedqueries/run"
                                    }
                                },
                                "Append_to_array_DetailsResultsAccounts": {
                                    "runAfter": {
                                        "Create_table_to_check_UserHighestExposureLevel": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "DetailedResultsAccounts",
                                        "value": {
                                            "UserDevices": "@body('Machines_-_Get_list_of_machines_-_SID_path')?['value']",
                                            "UserHighestExposureLevel": "@{if(contains(body('Create_table_to_check_UserHighestExposureLevel'), 'High'), 'High', if(contains(body('Create_table_to_check_UserHighestExposureLevel'), 'Medium'), 'Medium', if(contains(body('Create_table_to_check_UserHighestExposureLevel'), 'Low'), 'Low', if(contains(body('Create_table_to_check_UserHighestExposureLevel'), 'None'),'None','Unknown'))))}",
                                            "UserHighestRiskScore": "@{if(contains(body('Create_table_to_check_UserHighestRiskScore'), 'High'), 'High', if(contains(body('Create_table_to_check_UserHighestRiskScore'), 'Medium'), 'Medium', if(contains(body('Create_table_to_check_UserHighestRiskScore'), 'Low'), 'Low', if(contains(body('Create_table_to_check_UserHighestRiskScore'), 'Informational'), 'Informational', if(contains(body('Create_table_to_check_UserHighestRiskScore'), 'None'), 'None', 'Unknown')))))}",
                                            "UserId": "@{item()?['id']}",
                                            "UserPrincipalName": "@{item()?['UserPrincipalName']}",
                                            "UserSid": "@{coalesce(item()?['RawEntity']?['sid'],item()?['onPremisesSecurityIdentifier'])}"
                                        }
                                    }
                                },
                                "Compose_UserHighestScore": {
                                    "runAfter": {},
                                    "type": "Compose",
                                    "inputs": []
                                },
                                "Create_table_to_check_UserHighestExposureLevel": {
                                    "runAfter": {
                                        "Create_table_to_check_UserHighestRiskScore": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Table",
                                    "inputs": {
                                        "columns": [
                                            {
                                                "header": "",
                                                "value": "@item()['exposureLevel']"
                                            }
                                        ],
                                        "format": "CSV",
                                        "from": "@body('Machines_-_Get_list_of_machines_-_SID_path')?['value']"
                                    }
                                },
                                "Create_table_to_check_UserHighestRiskScore": {
                                    "runAfter": {
                                        "Machines_-_Get_list_of_machines_-_SID_path": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Table",
                                    "inputs": {
                                        "columns": [
                                            {
                                                "header": "",
                                                "value": "@item()?['riskScore']"
                                            }
                                        ],
                                        "format": "CSV",
                                        "from": "@body('Machines_-_Get_list_of_machines_-_SID_path')?['value']"
                                    }
                                },
                                "Machines_-_Get_list_of_machines_-_SID_path": {
                                    "runAfter": {
                                        "Advanced_Hunting_-_SID_path": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['wdatp']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/api/machines",
                                        "queries": {
                                            "$filter": "id in (\"@{join(body('Advanced_Hunting_-_SID_path')?['Results'][0]['List'],'\",\"')}\")",
                                            "$select": "id,computerDnsName,riskScore,exposureLevel"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Filter_array_-_Get_only_account_with_a_onPremisesSecurityIdentifier_or_sid": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_variable_Comments": {
                            "runAfter": {
                                "Initialize_variable_DetailedResultsIPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Comments",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_DetailedResultsAccounts": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "DetailedResultsAccounts",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_DetailedResultsIPs": {
                            "runAfter": {
                                "Initialize_variable_DetailedResultsAccounts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "DetailedResultsIPs",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Condition_-_Add_comment": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": "@outputs('Compose_response')",
                                "schema": {
                                    "properties": {
                                        "AnalyzedEntities": {
                                            "type": "integer",
                                            "description": "Number of entities parsed by the module"
                                        },
                                        "DetailedResults": {
                                            "properties": {
                                                "Accounts": {
                                                    "items": {
                                                        "properties": {
                                                            "UserDevices": {
                                                                "type": "array"
                                                            },
                                                            "UserHighestExposureLevel": {
                                                                "type": "string"
                                                            },
                                                            "UserHighestRiskScore": {
                                                                "type": "string"
                                                            },
                                                            "UserId": {
                                                                "type": "string"
                                                            },
                                                            "UserPrincipalName": {
                                                                "type": "string"
                                                            },
                                                            "UserSid": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [],
                                                        "type": "object"
                                                    },
                                                    "type": "array",
                                                    "description": "Array of accounts and associated devices"
                                                },
                                                "IPs": {
                                                    "items": {
                                                        "properties": {
                                                            "Address": {
                                                                "type": "string"
                                                            },
                                                            "IPDevices": {
                                                                "type": "array"
                                                            },
                                                            "IPHighestExposureLevel": {
                                                                "type": "string"
                                                            },
                                                            "IPHighestRiskScore": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [],
                                                        "type": "object"
                                                    },
                                                    "type": "array",
                                                    "description": "Array of IPs and associated devices"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "IPsHighestExposureLevel": {
                                            "type": "string",
                                            "description": "Highest exposure level found on devices for all IPs"
                                        },
                                        "IPsHighestRiskScore": {
                                            "type": "string",
                                            "description": "Highest risk score found on devices for all IPs"
                                        },
                                        "UsersHighestExposureLevel": {
                                            "type": "string",
                                            "description": "Highest exposure level found on devices for all accounts"
                                        },
                                        "UsersHighestRiskScore": {
                                            "type": "string",
                                            "description": "Highest risk score found for on devices all accounts"
                                        }
                                    },
                                    "type": "object"
                                },
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            },
                            "wdatp": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('DefenderConnectionName'))]",
                                "connectionName": "[variables('DefenderConnectionName')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/wdatp')]"
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "resourceID": {
            "type": "string",
            "value": "[resourceId('Microsoft.Logic/workflows', parameters('PlaybookName'))]"
        }
    }
}