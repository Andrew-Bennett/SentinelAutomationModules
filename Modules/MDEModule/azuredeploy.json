{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "connections_wdatp_4_name": {
            "defaultValue": "wdatp-4",
            "type": "String"
        },
        "workflows_Get_MDEUserDetails_name": {
            "defaultValue": "Get-MDEUserDetails",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_wdatp_4_name')]",
            "location": "eastus2",
            "kind": "V1",
            "properties": {
                "displayName": "MI Get-MDEUserDetails",
                "statuses": [
                    {
                        "status": "Ready"
                    }
                ],
                "customParameterValues": {},
                "createdTime": "2021-10-21T03:45:08.2603121Z",
                "changedTime": "2021-10-21T03:45:08.2603121Z",
                "api": {
                    "name": "wdatp",
                    "displayName": "Microsoft Defender ATP",
                    "description": "Microsoft Defender ATP is a unified platform for preventative protection, post-breach detection, automated investigation, and response. Read more about it here: http://aka.ms/wdatp",
                    "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1528/1.0.1528.2589/wdatp/icon.png",
                    "brandColor": "#0078D7",
                    "id": "/subscriptions/be3353de-b7e4-4d8c-840d-20f348fffe19/providers/Microsoft.Web/locations/eastus2/managedApis/wdatp",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": []
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_Get_MDEUserDetails_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_wdatp_4_name'))]"
            ],
            "identity": {
                "principalId": "eb181895-12b5-4038-9f1f-467fc1b47bcd",
                "tenantId": "7fd5eae5-c1d3-4337-991f-ece842ce8f75",
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "AddIncidentComments": {
                                            "type": "boolean"
                                        },
                                        "Entities": {
                                            "type": "array"
                                        },
                                        "IncidentARMId": {
                                            "type": "string"
                                        },
                                        "LookbackInDays": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Compose_final_results": {
                            "runAfter": {
                                "Condition_-_check_if_global_risk_is_High": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": {
                                "HighestScore": "@{variables('HighestScore')}",
                                "PerUserScore": "@variables('PerUserScore')"
                            }
                        },
                        "Condition_-_Terminate_if_no_accounts": {
                            "actions": {
                                "Response": {
                                    "runAfter": {},
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "statusCode": 200
                                    }
                                },
                                "Terminate": {
                                    "runAfter": {
                                        "Response": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Terminate",
                                    "inputs": {
                                        "runStatus": "Succeeded"
                                    }
                                }
                            },
                            "runAfter": {
                                "Filter_array_-_Get_only_accounts": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@length(body('Filter_array_-_Get_only_accounts'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_-_check_if_global_risk_is_High": {
                            "actions": {
                                "Set_variable_HighestScore_to_High": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "HighestScore",
                                        "value": "High"
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_account": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Condition_-_check_if_global_risk_is_Medium": {
                                        "actions": {
                                            "Set_variable_HighestScore_to_Medium": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "HighestScore",
                                                    "value": "Medium"
                                                }
                                            }
                                        },
                                        "runAfter": {},
                                        "else": {
                                            "actions": {
                                                "Condition_-_check_if_global_risk_is_Low": {
                                                    "actions": {
                                                        "Set_variable_HighestScore_to_Low": {
                                                            "runAfter": {},
                                                            "type": "SetVariable",
                                                            "inputs": {
                                                                "name": "HighestScore",
                                                                "value": "Low"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "else": {
                                                        "actions": {
                                                            "Condition_-_check_if_global_risk_is_Informational": {
                                                                "actions": {
                                                                    "Set_variable_HighestScore_to_Informational": {
                                                                        "runAfter": {},
                                                                        "type": "SetVariable",
                                                                        "inputs": {
                                                                            "name": "HighestScore",
                                                                            "value": "Informational"
                                                                        }
                                                                    }
                                                                },
                                                                "runAfter": {},
                                                                "else": {
                                                                    "actions": {
                                                                        "Condition_-_check_if_global_risk_is_none": {
                                                                            "actions": {
                                                                                "Set_variable_HighestScore_to_None": {
                                                                                    "runAfter": {},
                                                                                    "type": "SetVariable",
                                                                                    "inputs": {
                                                                                        "name": "HighestScore",
                                                                                        "value": "None"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "runAfter": {},
                                                                            "else": {
                                                                                "actions": {
                                                                                    "Set_variable_HighestRisk_to_Unknown": {
                                                                                        "runAfter": {},
                                                                                        "type": "SetVariable",
                                                                                        "inputs": {
                                                                                            "name": "HighestScore",
                                                                                            "value": "Unknown"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "and": [
                                                                                    {
                                                                                        "contains": [
                                                                                            "@variables('PerUserHighestScoreGlobal')",
                                                                                            "None"
                                                                                        ]
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "type": "If"
                                                                        }
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "and": [
                                                                        {
                                                                            "contains": [
                                                                                "@variables('PerUserHighestScoreGlobal')",
                                                                                "Informational"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                "type": "If"
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "contains": [
                                                                    "@variables('PerUserHighestScoreGlobal')",
                                                                    "Low"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                }
                                            }
                                        },
                                        "expression": {
                                            "and": [
                                                {
                                                    "contains": [
                                                        "@variables('PerUserHighestScoreGlobal')",
                                                        "Medium"
                                                    ]
                                                }
                                            ]
                                        },
                                        "type": "If"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "contains": [
                                            "@variables('PerUserHighestScoreGlobal')",
                                            "High"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Filter_array_-_Get_only_accounts": {
                            "runAfter": {
                                "Initialize_variable_HighestScore": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@triggerBody()?['Entities']",
                                "where": "@equals(item()['kind'], 'Account')"
                            }
                        },
                        "For_each_account": {
                            "foreach": "@body('Filter_array_-_Get_only_accounts')",
                            "actions": {
                                "Check_if_the_sid_is_not_empty": {
                                    "actions": {
                                        "Advanced_Hunting_-_Query_DeviceLogonEvents": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "Query": "DeviceLogonEvents \n| where Timestamp > ago( @{triggerBody()?['LookbackInDays']}d )\n| where LogonType in (\"Interactive\",\"RemoteInteractive\")\n| where AccountSid == \"@{variables('UserSid')}\"\n| distinct DeviceName, DeviceId"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['wdatp_1']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/api/advancedqueries/run"
                                            }
                                        },
                                        "Check_if_the_query_returned_something": {
                                            "actions": {
                                                "Append_to_array_PerUserScore_when_the_sid_is_found": {
                                                    "runAfter": {
                                                        "Condition_-_check_for_High_risk": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "PerUserScore",
                                                        "value": {
                                                            "UserDevices": "@variables('UserDevices')",
                                                            "UserHighestScore": "@{variables('UserHighestScore')}",
                                                            "UserId": "@{variables('UserId')}",
                                                            "UserPrincipalName": "@{variables('UserPrincipalName')}",
                                                            "UserSid": "@{variables('UserSid')}"
                                                        }
                                                    }
                                                },
                                                "Condition_-_check_for_High_risk": {
                                                    "actions": {
                                                        "Set_variable_UserHighestScore_to_High": {
                                                            "runAfter": {},
                                                            "type": "SetVariable",
                                                            "inputs": {
                                                                "name": "UserHighestScore",
                                                                "value": "High"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "For_each_device": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Condition_-_check_for_Medium_risk": {
                                                                "actions": {
                                                                    "Set_variable_UserHighestScore_to_Medium": {
                                                                        "runAfter": {},
                                                                        "type": "SetVariable",
                                                                        "inputs": {
                                                                            "name": "UserHighestScore",
                                                                            "value": "Medium"
                                                                        }
                                                                    }
                                                                },
                                                                "runAfter": {},
                                                                "else": {
                                                                    "actions": {
                                                                        "Condition_-_check_for_Low_risk": {
                                                                            "actions": {
                                                                                "Set_variable_UserHighestScore_to_Low": {
                                                                                    "runAfter": {},
                                                                                    "type": "SetVariable",
                                                                                    "inputs": {
                                                                                        "name": "UserHighestScore",
                                                                                        "value": "Low"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "runAfter": {},
                                                                            "else": {
                                                                                "actions": {
                                                                                    "Condition_-_check_for_Informational_risk": {
                                                                                        "actions": {
                                                                                            "Set_variable_UserHighestScore_to_Informational": {
                                                                                                "runAfter": {},
                                                                                                "type": "SetVariable",
                                                                                                "inputs": {
                                                                                                    "name": "UserHighestScore",
                                                                                                    "value": "Informational"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "runAfter": {},
                                                                                        "else": {
                                                                                            "actions": {
                                                                                                "Set_variable_UserHighestScore_to_None": {
                                                                                                    "runAfter": {},
                                                                                                    "type": "SetVariable",
                                                                                                    "inputs": {
                                                                                                        "name": "UserHighestScore",
                                                                                                        "value": "None"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "expression": {
                                                                                            "and": [
                                                                                                {
                                                                                                    "contains": [
                                                                                                        "@variables('PerUserHighestScore')",
                                                                                                        "Informational"
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "type": "If"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "and": [
                                                                                    {
                                                                                        "contains": [
                                                                                            "@variables('PerUserHighestScore')",
                                                                                            "Low"
                                                                                        ]
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "type": "If"
                                                                        }
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "and": [
                                                                        {
                                                                            "contains": [
                                                                                "@variables('PerUserHighestScore')",
                                                                                "Medium"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                "type": "If"
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "contains": [
                                                                    "@variables('PerUserHighestScore')",
                                                                    "High"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "For_each_device": {
                                                    "foreach": "@body('Advanced_Hunting_-_Query_DeviceLogonEvents')?['Results']",
                                                    "actions": {
                                                        "Check_if_we_have_a_result_for_the_machine": {
                                                            "actions": {
                                                                "Append_to_array_PerUserHighestScore": {
                                                                    "runAfter": {
                                                                        "Append_to_array_UserDevices": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "PerUserHighestScore",
                                                                        "value": "@body('Machines_-_Get_single_machine')?['riskScore']"
                                                                    }
                                                                },
                                                                "Append_to_array_PerUserHighestScoreGlobal": {
                                                                    "runAfter": {
                                                                        "Append_to_array_PerUserHighestScore": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "PerUserHighestScoreGlobal",
                                                                        "value": "@body('Machines_-_Get_single_machine')?['riskScore']"
                                                                    }
                                                                },
                                                                "Append_to_array_UserDevices": {
                                                                    "runAfter": {},
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "UserDevices",
                                                                        "value": {
                                                                            "DeviceId": "@{body('Machines_-_Get_single_machine')?['id']}",
                                                                            "DeviceName": "@{body('Machines_-_Get_single_machine')?['computerDnsName']}",
                                                                            "DeviceRiskScore": "@{body('Machines_-_Get_single_machine')?['riskScore']}"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Machines_-_Get_single_machine": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@contains(body('Machines_-_Get_single_machine'),'riskScore')",
                                                                            "@true"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If"
                                                        },
                                                        "Machines_-_Get_single_machine": {
                                                            "runAfter": {},
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['wdatp_1']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "get",
                                                                "path": "/api/machines/@{encodeURIComponent(item()['DeviceId'])}"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "type": "Foreach",
                                                    "runtimeConfiguration": {
                                                        "concurrency": {
                                                            "repetitions": 1
                                                        }
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Advanced_Hunting_-_Query_DeviceLogonEvents": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Append_to_array_PerUserScore_when_no_hunting_results": {
                                                        "runAfter": {},
                                                        "type": "AppendToArrayVariable",
                                                        "inputs": {
                                                            "name": "PerUserScore",
                                                            "value": {
                                                                "UserDevices": [],
                                                                "UserHighestScore": "@{variables('UserHighestScore')}",
                                                                "UserId": "@{variables('UserId')}",
                                                                "UserPrincipalName": "@{variables('UserPrincipalName')}",
                                                                "UserSid": "@{variables('UserSid')}"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "greater": [
                                                            "@length(body('Advanced_Hunting_-_Query_DeviceLogonEvents')?['Results'])",
                                                            0
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Condition_-_sid_check": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Append_to_array_PerUserScore_when_the_sid_is_not_found": {
                                                "runAfter": {},
                                                "type": "AppendToArrayVariable",
                                                "inputs": {
                                                    "name": "PerUserScore",
                                                    "value": {
                                                        "UserDevices": [],
                                                        "UserHighestScore": "@{variables('UserHighestScore')}",
                                                        "UserId": "@{variables('UserId')}",
                                                        "UserPrincipalName": "@{variables('UserPrincipalName')}",
                                                        "UserSid": "@{variables('UserSid')}"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "greater": [
                                                    "@length(variables('UserSid'))",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_-_sid_check": {
                                    "actions": {
                                        "Check_if_we_have_an_aadUserId_in_the_entitiy": {
                                            "actions": {
                                                "Condition_-_check_if_the_AAD_call_returned_something": {
                                                    "actions": {
                                                        "Set_variable_UserPrincipalName_through_ID_lookup": {
                                                            "runAfter": {},
                                                            "type": "SetVariable",
                                                            "inputs": {
                                                                "name": "UserPrincipalName",
                                                                "value": "@{body('HTTP_Get_the_name_from_the_id')['userPrincipalName']}"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "HTTP_Get_the_name_from_the_id": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Set_variable_UserPrincipalName_to_unknown_after_lookup": {
                                                                "runAfter": {},
                                                                "type": "SetVariable",
                                                                "inputs": {
                                                                    "name": "UserPrincipalName",
                                                                    "value": "unknown"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@contains(body('HTTP_Get_the_name_from_the_id'),'userPrincipalName')",
                                                                    "@true"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "HTTP_Get_the_name_from_the_id": {
                                                    "runAfter": {
                                                        "Set_variable_UserId_from_the_entity": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com/",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/v1.0/users/@{variables('UserId')}"
                                                    }
                                                },
                                                "Set_variable_UserId_from_the_entity": {
                                                    "runAfter": {},
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "UserId",
                                                        "value": "@{item()['properties']['aadUserId']}"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Set_variable_UserSid_directly": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Check_if_we_have_a_name_in_the_entity": {
                                                        "actions": {
                                                            "Check_if_the_UserPrincipalName_is_the_right_format": {
                                                                "actions": {
                                                                    "Check_if_the_ID_lookup_worked": {
                                                                        "actions": {
                                                                            "Set_variable_UserId_through_the_UPN_lookup": {
                                                                                "runAfter": {},
                                                                                "type": "SetVariable",
                                                                                "inputs": {
                                                                                    "name": "UserId",
                                                                                    "value": "@{ body('HTTP_Get_the_id_from_the_name')['id']}"
                                                                                }
                                                                            }
                                                                        },
                                                                        "runAfter": {
                                                                            "HTTP_Get_the_id_from_the_name": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "else": {
                                                                            "actions": {
                                                                                "Set_variable_UserId_to_unknown_after_UPN_lookup_failure": {
                                                                                    "runAfter": {},
                                                                                    "type": "SetVariable",
                                                                                    "inputs": {
                                                                                        "name": "UserId",
                                                                                        "value": "unknown"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "expression": {
                                                                            "and": [
                                                                                {
                                                                                    "equals": [
                                                                                        "@contains(body('HTTP_Get_the_id_from_the_name'),'id')",
                                                                                        "@true"
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        "type": "If"
                                                                    },
                                                                    "HTTP_Get_the_id_from_the_name": {
                                                                        "runAfter": {},
                                                                        "type": "Http",
                                                                        "inputs": {
                                                                            "authentication": {
                                                                                "audience": "https://graph.microsoft.com/",
                                                                                "type": "ManagedServiceIdentity"
                                                                            },
                                                                            "method": "GET",
                                                                            "uri": "https://graph.microsoft.com/v1.0/users/@{variables('UserPrincipalName')}"
                                                                        }
                                                                    }
                                                                },
                                                                "runAfter": {
                                                                    "Set_variable_UserPrincipalName_from_the_entity": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "else": {
                                                                    "actions": {
                                                                        "Set_variable_UserId_to_unknown_because_no_UPN_lookup_possible": {
                                                                            "runAfter": {},
                                                                            "type": "SetVariable",
                                                                            "inputs": {
                                                                                "name": "UserId",
                                                                                "value": "unknown"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "and": [
                                                                        {
                                                                            "contains": [
                                                                                "@variables('UserPrincipalName')",
                                                                                "@"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                "type": "If"
                                                            },
                                                            "Set_variable_UserPrincipalName_from_the_entity": {
                                                                "runAfter": {},
                                                                "type": "SetVariable",
                                                                "inputs": {
                                                                    "name": "UserPrincipalName",
                                                                    "value": "@{item()['properties']['name']}"
                                                                }
                                                            }
                                                        },
                                                        "runAfter": {},
                                                        "else": {
                                                            "actions": {
                                                                "Set_variable_UserPrincipalName_to_unknown": {
                                                                    "runAfter": {},
                                                                    "type": "SetVariable",
                                                                    "inputs": {
                                                                        "name": "UserPrincipalName",
                                                                        "value": "unknown"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "equals": [
                                                                        "@contains(item()['properties'],'name')",
                                                                        "@true"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type": "If"
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@contains(item()['properties'],'aadUserId')",
                                                            "@true"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Set_variable_UserSid_directly": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "UserSid",
                                                "value": "@{item()['properties']['sid']}"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Reset_variable_UserHighestScore": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Condition_for_aadUserId_and_UPN_": {
                                                "actions": {
                                                    "Set_variable_AADFilter_with_the_aadUserId": {
                                                        "runAfter": {},
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "AADFilter",
                                                            "value": "@{items('For_each_account')['properties']['aadUserId']}"
                                                        }
                                                    }
                                                },
                                                "runAfter": {},
                                                "else": {
                                                    "actions": {
                                                        "Set_variable_AADFilter_with_the_UPN": {
                                                            "runAfter": {},
                                                            "type": "SetVariable",
                                                            "inputs": {
                                                                "name": "AADFilter",
                                                                "value": "@{concat(item()['properties']['accountName'],'@',item()['properties']['upnSuffix'])}"
                                                            }
                                                        }
                                                    }
                                                },
                                                "expression": {
                                                    "and": [
                                                        {
                                                            "equals": [
                                                                "@contains(item()['properties'],'aadUserId')",
                                                                "@true"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "type": "If"
                                            },
                                            "HTTP_Get_the_sid": {
                                                "runAfter": {
                                                    "Condition_for_aadUserId_and_UPN_": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "Http",
                                                "inputs": {
                                                    "authentication": {
                                                        "audience": "https://graph.microsoft.com/",
                                                        "type": "ManagedServiceIdentity"
                                                    },
                                                    "method": "GET",
                                                    "uri": "https://graph.microsoft.com/beta/users/@{variables('AADFilter')}"
                                                }
                                            },
                                            "Set_variable_UserId_from_the_Get_Sid_AAD_query": {
                                                "runAfter": {
                                                    "HTTP_Get_the_sid": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "UserId",
                                                    "value": "@{body('HTTP_Get_the_sid')['id']}"
                                                }
                                            },
                                            "Set_variable_UserPrincipalName_from_the_Get_Sid_AAD_query": {
                                                "runAfter": {
                                                    "Set_variable_UserId_from_the_Get_Sid_AAD_query": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "UserPrincipalName",
                                                    "value": "@{body('HTTP_Get_the_sid')['userPrincipalName']}"
                                                }
                                            },
                                            "Set_variable_UserSid_from_AAD": {
                                                "runAfter": {
                                                    "Set_variable_UserPrincipalName_from_the_Get_Sid_AAD_query": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "UserSid",
                                                    "value": "@{body('HTTP_Get_the_sid')['onPremisesSecurityIdentifier']}"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@contains(item()['properties'],'sid')",
                                                    "@true"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Reset_variable_PerUserHisghestScore": {
                                    "runAfter": {
                                        "Reset_variable_UserDevices": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "PerUserHighestScore",
                                        "value": []
                                    }
                                },
                                "Reset_variable_UserDevices": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "UserDevices",
                                        "value": []
                                    }
                                },
                                "Reset_variable_UserHighestScore": {
                                    "runAfter": {
                                        "Reset_variable_UserId": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "UserHighestScore",
                                        "value": "unknown"
                                    }
                                },
                                "Reset_variable_UserId": {
                                    "runAfter": {
                                        "Reset_variable_UserPrincipalName": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "UserId",
                                        "value": "unknown"
                                    }
                                },
                                "Reset_variable_UserPrincipalName": {
                                    "runAfter": {
                                        "Reset_variable_PerUserHisghestScore": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "UserPrincipalName",
                                        "value": "unknown"
                                    }
                                }
                            },
                            "runAfter": {
                                "Condition_-_Terminate_if_no_accounts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Initialize_PerUserHighestScore": {
                            "runAfter": {
                                "Initialize_variable_PerUserScore": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "PerUserHighestScore",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_AADFilter": {
                            "runAfter": {
                                "Initialize_variable_UserSid": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "AADFilter",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_HighestScore": {
                            "runAfter": {
                                "Initialize_variable_UserHighestScore": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "HighestScore",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_PerUserScore": {
                            "runAfter": {
                                "Initialize_variable_AADFilter": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "PerUserScore",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_UserDevices": {
                            "runAfter": {
                                "PerUserHighestScoreGlobal": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "UserDevices",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_UserHighestScore": {
                            "runAfter": {
                                "Initialize_variable_UserId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "UserHighestScore",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_UserId": {
                            "runAfter": {
                                "Initialize_variable_UserPrincipalName": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "UserId",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_UserPrincipalName": {
                            "runAfter": {
                                "Initialize_variable_UserDevices": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "UserPrincipalName",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_UserSid": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "UserSid",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "PerUserHighestScoreGlobal": {
                            "runAfter": {
                                "Initialize_PerUserHighestScore": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "PerUserHighestScoreGlobal",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Send_final_results": {
                            "runAfter": {
                                "Compose_final_results": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": "@outputs('Compose_final_results')",
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "wdatp_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_wdatp_4_name'))]",
                                "connectionName": "wdatp-4",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "/subscriptions/be3353de-b7e4-4d8c-840d-20f348fffe19/providers/Microsoft.Web/locations/eastus2/managedApis/wdatp"
                            }
                        }
                    }
                }
            }
        }
    ]
}