{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Get-RelatedAlerts",
            "type": "string"
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "AddIncidentComments": {
                                            "type": "boolean"
                                        },
                                        "CheckAccountEntityMatches": {
                                            "type": "boolean"
                                        },
                                        "CheckIPEntityMatches": {
                                            "type": "boolean"
                                        },
                                        "Entities": {
                                            "type": "array"
                                        },
                                        "IncidentARMId": {
                                            "type": "string"
                                        },
                                        "LookbackInDays": {
                                            "type": "integer"
                                        },
                                        "WorkspaceId": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Check_for_Related_Alerts": {
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Add_comment_to_incident_(V3)": {
                                            "runAfter": {
                                                "Create_HTML_table": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "incidentArmId": "@triggerBody()?['IncidentARMId']",
                                                    "message": "<p>There were @{length(body('HTTP')['tables'][0]['rows'])} related alerts found.<br>\n<br>\n@{body('Create_HTML_table')}<br>\n<br>\n</p>"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/Incidents/Comment"
                                            }
                                        },
                                        "Create_HTML_table": {
                                            "runAfter": {},
                                            "type": "Table",
                                            "inputs": {
                                                "format": "HTML",
                                                "from": "@body('Select')"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Response": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@triggerBody()?['AddIncidentComments']",
                                                    true
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Response": {
                                    "runAfter": {
                                        "Select": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "body": {
                                            "DetailedResults": "@body('Select')",
                                            "RelatedAlertsCount": "@length(body('HTTP')['tables'][0]['rows'])",
                                            "RelatedAlertsFound": true
                                        },
                                        "statusCode": 200
                                    }
                                },
                                "Select": {
                                    "runAfter": {},
                                    "type": "Select",
                                    "inputs": {
                                        "from": "@body('HTTP')['tables'][0]['rows']",
                                        "select": {
                                            "@{body('HTTP')['tables'][0]['columns'][0]['name']}": "@item()[0]",
                                            "@{body('HTTP')['tables'][0]['columns'][1]['name']}": "@item()[1]",
                                            "@{body('HTTP')['tables'][0]['columns'][2]['name']}": "@item()[2]",
                                            "@{body('HTTP')['tables'][0]['columns'][3]['name']}": "@item()[3]",
                                            "@{body('HTTP')['tables'][0]['columns'][4]['name']}": "@item()[4]",
                                            "@{body('HTTP')['tables'][0]['columns'][5]['name']}": "@item()[5]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Response_2": {
                                        "runAfter": {},
                                        "type": "Response",
                                        "kind": "Http",
                                        "inputs": {
                                            "body": {
                                                "DetailedResults": [],
                                                "RelatedAlertsCount": 0,
                                                "RelatedAlertsFound": false
                                            },
                                            "statusCode": 200
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(body('HTTP')['tables'][0]['rows'])",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Compose": {
                            "runAfter": {},
                            "type": "Compose",
                            "inputs": "let incidentARMId = \"@{triggerBody()?['IncidentARMId']}\";\nlet entityData = '@{triggerBody()?['Entities']}';\nlet checkAccountEntity = @{triggerBody()?['CheckAccountEntityMatches']};\nlet checkIPEntity = @{triggerBody()?['CheckIPEntityMatches']};\nlet lookback = @{triggerBody()?['LookbackInDays']}d;\nlet incidentEntities = datatable(temp:string)['']\n| extend Entities = parse_json(entityData)\n| mv-expand todynamic(Entities)\n| where (Entities.kind =~ \"Account\" and checkAccountEntity) or (Entities.kind =~ \"Ip\" and checkIPEntity)\n| extend EntityData = case(Entities.kind == \"Account\", strcat(tolower(Entities.kind), \"-\", Entities.properties.accountName, \"-\", Entities.properties.upnSuffix), \n    Entities.kind == \"Ip\", strcat(tolower(Entities.kind), \"-\", Entities.properties.address), \"unmapped\")\n| where EntityData <> \"unmapped\";\nlet currentIncidentAlerts = SecurityIncident\n| where TimeGenerated > ago(lookback)\n| where IncidentUrl endswith incidentARMId\n| summarize arg_max(TimeGenerated, *) by IncidentNumber\n| mv-expand AlertIds\n| project SystemAlertId=tostring(AlertIds);\nlet alertEntities = SecurityAlert\n| where TimeGenerated > ago(lookback)\n| summarize arg_max(TimeGenerated, *) by SystemAlertId\n| where SystemAlertId !in (currentIncidentAlerts)\n| mv-expand todynamic(Entities)\n| extend EntityData = case(Entities.Type == \"account\", strcat(tolower(Entities.Type), \"-\", Entities.Name, \"-\", Entities.UPNSuffix), \n    Entities.Type == \"ip\", strcat(tolower(Entities.Type), \"-\", Entities.Address), \"unmapped\")\n| where EntityData <> \"unmapped\";\nincidentEntities\n| join kind=inner (alertEntities) on EntityData\n| summarize by StartTime, DisplayName, AlertName, AlertSeverity, SystemAlertId, ProviderName"
                        },
                        "HTTP": {
                            "runAfter": {
                                "Compose": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://api.loganalytics.io",
                                    "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                    "query": "@{outputs('Compose')}",
                                    "timespan": "P@{triggerBody()?['LookbackInDays']}D"
                                },
                                "method": "POST",
                                "uri": "https://api.loganalytics.io/v1/workspaces/@{triggerBody()?['WorkspaceId']}/query"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}
