{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Get-RelatedAlerts",
            "type": "string"
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "PlaybookVersion": {
                            "defaultValue": "0.0.2",
                            "type": "String"
                        },
                        "PlaybookInternalName": {
                            "defaultValue": "RelatedAlerts",
                            "type": "String"
                        },
                        "ProjectName": {
                            "defaultValue": "STAT",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "triage": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "AddIncidentComments": {
                                            "title": "Add comments to the incident",
                                            "type": "boolean"
                                        },
                                        "CheckAccountEntityMatches": {
                                            "title": "Match Alerts on Account Entities",
                                            "type": "boolean"
                                        },
                                        "CheckHostEntityMatches": {
                                            "title": "Match Alerts on Host Entities",
                                            "type": "boolean"
                                        },
                                        "CheckIPEntityMatches": {
                                            "title": "Match Alerts on IP Entities",
                                            "type": "boolean"
                                        },
                                        "Entities": {
                                            "description": "Click here and select the Body object from the Base-Module output in the Dynamic content menu",
                                            "title": "Base Module Body",
                                            "type": "array"
                                        },
                                        "LookbackInDays": {
                                            "description": "Enter a value between 1 and 90",
                                            "maximum": 90,
                                            "minimum": 1,
                                            "title": "Lookback period in days",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Check_for_Related_Alerts": {
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Add_comment_to_incident_(V3)": {
                                            "runAfter": {
                                                "Create_HTML_table": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "incidentArmId": "@body('Parse_JSON')?['IncidentARMId']",
                                                    "message": "<p>There were @{length(body('HTTP')['tables'][0]['rows'])} related alerts found.<br>\n<br>\n@{body('Create_HTML_table')}<br>\n<br>\n</p>"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/Incidents/Comment"
                                            }
                                        },
                                        "Create_HTML_table": {
                                            "runAfter": {},
                                            "type": "Table",
                                            "inputs": {
                                                "format": "HTML",
                                                "from": "@body('Select')"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Response": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@triggerBody()?['AddIncidentComments']",
                                                    true
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Filter_array_-_Accounts": {
                                    "runAfter": {
                                        "Select": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Query",
                                    "inputs": {
                                        "from": "@body('Select')",
                                        "where": "@equals(item()['AccountEntityMatch'], true)"
                                    }
                                },
                                "Filter_array_-_Hosts": {
                                    "runAfter": {
                                        "Select": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Query",
                                    "inputs": {
                                        "from": "@body('Select')",
                                        "where": "@equals(item()['HostEntityMatch'], true)"
                                    }
                                },
                                "Filter_array_-_IP": {
                                    "runAfter": {
                                        "Select": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Query",
                                    "inputs": {
                                        "from": "@body('Select')",
                                        "where": "@equals(item()['IPEntityMatch'], true)"
                                    }
                                },
                                "Response": {
                                    "runAfter": {
                                        "Filter_array_-_Accounts": [
                                            "Succeeded"
                                        ],
                                        "Filter_array_-_Hosts": [
                                            "Succeeded"
                                        ],
                                        "Filter_array_-_IP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "body": {
                                            "DetailedResults": "@body('Select')",
                                            "RelatedAccountAlertsCount": "@length(body('Filter_array_-_Accounts'))",
                                            "RelatedAccountAlertsFound": "@if(greater(length(body('Filter_array_-_Accounts')), 0), true, false)",
                                            "RelatedAlertsCount": "@length(body('HTTP')['tables'][0]['rows'])",
                                            "RelatedAlertsFound": true,
                                            "RelatedHostAlertsCount": "@length(body('Filter_array_-_Hosts'))",
                                            "RelatedHostAlertsFound": "@if(greater(length(body('Filter_array_-_Hosts')), 0), true, false)",
                                            "RelatedIPAlertsCount": "@length(body('Filter_array_-_IP'))",
                                            "RelatedIPAlertsFound": "@if(greater(length(body('Filter_array_-_IP')), 0), true, false)"
                                        },
                                        "statusCode": 200
                                    }
                                },
                                "Select": {
                                    "runAfter": {},
                                    "type": "Select",
                                    "inputs": {
                                        "from": "@body('HTTP')['tables'][0]['rows']",
                                        "select": {
                                            "@{body('HTTP')['tables'][0]['columns'][0]['name']}": "@item()[0]",
                                            "@{body('HTTP')['tables'][0]['columns'][1]['name']}": "@item()[1]",
                                            "@{body('HTTP')['tables'][0]['columns'][2]['name']}": "@item()[2]",
                                            "@{body('HTTP')['tables'][0]['columns'][3]['name']}": "@item()[3]",
                                            "@{body('HTTP')['tables'][0]['columns'][4]['name']}": "@item()[4]",
                                            "@{body('HTTP')['tables'][0]['columns'][5]['name']}": "@item()[5]",
                                            "@{body('HTTP')['tables'][0]['columns'][6]['name']}": "@item()[6]",
                                            "@{body('HTTP')['tables'][0]['columns'][7]['name']}": "@item()[7]",
                                            "@{body('HTTP')['tables'][0]['columns'][8]['name']}": "@item()[8]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Response_2": {
                                        "runAfter": {},
                                        "type": "Response",
                                        "kind": "Http",
                                        "inputs": {
                                            "body": {
                                                "DetailedResults": [],
                                                "RelatedAlertsCount": 0,
                                                "RelatedAlertsFound": false
                                            },
                                            "statusCode": 200
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(body('HTTP')['tables'][0]['rows'])",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Compose": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": "let incidentARMId = '@{body('Parse_JSON')?['IncidentARMId']}';\nlet accountData = '@{body('Parse_JSON')?['Accounts']}';\nlet ipData = '@{body('Parse_JSON')?['IPs']}';\nlet hostData = '@{body('Parse_JSON')?['Hosts']}';\nlet checkAccountEntity = @{triggerBody()?['CheckAccountEntityMatches']};\nlet checkIPEntity = @{triggerBody()?['CheckIPEntityMatches']};\nlet checkHostEntity = @{triggerBody()?['CheckHostEntityMatches']};\nlet lookback = @{triggerBody()?['LookbackInDays']}d;\nlet accountEntities = toscalar(datatable(temp:string)['']\n| where checkAccountEntity\n| extend Entities = parse_json(accountData)\n| mv-expand todynamic(Entities)\n| project SamAccountName=Entities.onPremisesSamAccountName, SID=Entities.onPremisesSecurityIdentifier, UPNName=split(Entities.userPrincipalName,'@')[0], Friendly=Entities.RawEntity.friendlyName\n| extend EntityData = pack_array(SamAccountName, SID, UPNName, Friendly)\n| mv-apply EntityData on (where isnotempty(EntityData))\n| summarize EntityData=make_set(EntityData));\nlet ipEntities = toscalar(datatable(temp:string)['']\n| where checkIPEntity\n| extend Entities = parse_json(ipData)\n| mv-expand todynamic(Entities)\n| project IP= coalesce(Entities.Address, Entities.RawEntity.address, Entities.RawEntity.friendlyName)\n| where isnotempty( IP)\n| summarize EntityData=make_set(IP));\nlet hostEntities = toscalar(datatable(temp:string)['']\n| where checkHostEntity\n| extend Entities = parse_json(hostData)\n| mv-expand todynamic(Entities)\n| project FQDN=Entities.FQDN, Hostname=coalesce(Entities.Hostname, Entities.RawEntity.hostName, Entities.RawEntity.friendlyName)\n| extend EntityData = pack_array(FQDN, Hostname)\n| mv-apply EntityData on (where isnotempty(EntityData))\n| summarize EntityData=make_set(EntityData));\nlet currentIncidentAlerts = SecurityIncident\n| where TimeGenerated > ago(lookback)\n| where IncidentUrl endswith incidentARMId\n| summarize arg_max(TimeGenerated, *) by IncidentNumber\n| mv-expand AlertIds\n| project SystemAlertId=tostring(AlertIds);\nSecurityAlert | where TimeGenerated > ago(lookback) | summarize arg_max(TimeGenerated, *) by SystemAlertId | where SystemAlertId !in (currentIncidentAlerts) |  mv-expand todynamic(Entities) | where Entities has_any (accountEntities) or ( Entities has_any (ipEntities) and Entities.Type == \"ip\") or Entities has_any (hostEntities) | extend AccountEntityMatch = iff(Entities has_any (accountEntities), true, false), HostEntityMatch = iff(Entities has_any (hostEntities), true, false), IPEntityMatch = iff(Entities has_any (ipEntities) , true, false) | summarize AccountEntityMatch = max(AccountEntityMatch), IPEntityMatch=max(IPEntityMatch),HostEntityMatch=max(HostEntityMatch) by StartTime, DisplayName, AlertName, AlertSeverity, SystemAlertId, ProviderName"
                        },
                        "HTTP": {
                            "runAfter": {
                                "Compose": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://api.loganalytics.io",
                                    "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                    "query": "@{outputs('Compose')}",
                                    "timespan": "P@{triggerBody()?['LookbackInDays']}D"
                                },
                                "method": "POST",
                                "uri": "https://api.loganalytics.io/v1/workspaces/@{body('Parse_JSON')?['WorkspaceId']}/query"
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()?['Entities']",
                                "schema": {
                                    "properties": {
                                        "Accounts": {
                                            "description": "Array of User Accounts",
                                            "items": {
                                                "properties": {
                                                    "AssignedRoles": {
                                                        "description": "Array of assigned roles in Accounts array",
                                                        "items": {
                                                            "properties": {
                                                                "Role": {
                                                                    "description": "Array property in AssignedRoles array"
                                                                }
                                                            },
                                                            "required": [],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Accounts array",
                                                        "properties": {
                                                            "accountName": {
                                                                "description": "accountName from RawEntity object in Accounts array"
                                                            },
                                                            "displayName": {
                                                                "description": "dislayName from RawEntity object in Accounts array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Accounts array"
                                                            },
                                                            "isDomainJoined": {
                                                                "description": "isDomainJoined from RawEntity object in Accounts array"
                                                            },
                                                            "sid": {
                                                                "description": "sid from RawEntity object in Accounts array"
                                                            },
                                                            "upnSuffix": {
                                                                "description": "upnSuffix from RawEntity object in Accounts array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "accountEnabled": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "city": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "country": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "department": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "id": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "jobTitle": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "mail": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "manager": {
                                                        "description": "Array property in Accounts array",
                                                        "properties": {
                                                            "@@odata.type": {
                                                                "description": "Array property in Accounts array manager object"
                                                            },
                                                            "id": {
                                                                "description": "Array property in Accounts array manager object"
                                                            },
                                                            "mail": {
                                                                "description": "Array property in Accounts array manager object"
                                                            },
                                                            "userPrincipalName": {
                                                                "description": "Array property in Accounts array manager object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "officeLocation": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesDistinguishedName": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesDomainName": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesSamAccountName": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesSecurityIdentifier": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesSyncEnabled": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "state": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "userPrincipalName": {
                                                        "description": "Array property in Accounts array"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "AccountsCount": {
                                            "description": "Count of accounts processed by module",
                                            "type": "integer"
                                        },
                                        "Domains": {
                                            "description": "Array of Domains",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Domains array",
                                                        "properties": {
                                                            "domainName": {
                                                                "description": "domainName from RawEntity object in Domains array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Domains array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "DomainsCount": {
                                            "description": "Count of Domains processed by module",
                                            "type": "integer"
                                        },
                                        "EntitiesCount": {
                                            "description": "Count of all entities processed by enrichment module",
                                            "type": "integer"
                                        },
                                        "FileHashes": {
                                            "description": "Array of FileHashes",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in FileHashes array",
                                                        "properties": {
                                                            "algorithm": {
                                                                "description": "algorithm from RawEntity object in FileHashes array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in FileHashes array"
                                                            },
                                                            "hashValue": {
                                                                "description": "hashValue from RawEntity object in FileHashes array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "FileHashesCount": {
                                            "description": "Count of File Hashes processed by module",
                                            "type": "integer"
                                        },
                                        "Files": {
                                            "description": "Array of Files",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Files array",
                                                        "properties": {
                                                            "directory": {
                                                                "description": "directory from RawEntity object in Files array"
                                                            },
                                                            "fileName": {
                                                                "description": "fileName from RawEntity object in Files array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Files array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "FilesCount": {
                                            "description": "Count of Files processed by module",
                                            "type": "integer"
                                        },
                                        "Hosts": {
                                            "description": "Array of Hosts",
                                            "items": {
                                                "properties": {
                                                    "DnsDomain": {
                                                        "description": "Array property in Hosts array"
                                                    },
                                                    "FQDN": {
                                                        "description": "Array property in Hosts array"
                                                    },
                                                    "Hostname": {
                                                        "description": "Array property in Hosts array"
                                                    },
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Hosts array",
                                                        "properties": {
                                                            "dnsDomain": {
                                                                "description": "dnsDomain from RawEntity object in Hosts array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Hosts array"
                                                            },
                                                            "hostName": {
                                                                "description": "hostName from RawEntity object in Hosts array"
                                                            },
                                                            "netBiosName": {
                                                                "description": "netBiosName from RawEntity object in Hosts array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "HostsCount": {
                                            "description": "Count of Hosts processed by module",
                                            "type": "integer"
                                        },
                                        "IPs": {
                                            "description": "Array of IP Addresses",
                                            "items": {
                                                "properties": {
                                                    "Address": {
                                                        "description": "Array property in IPs array"
                                                    },
                                                    "GeoData": {
                                                        "description": "Array object in IPs array",
                                                        "properties": {
                                                            "asn": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "carrier": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "city": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "cityCf": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "continent": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "country": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "countryCf": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "ipAddr": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "ipRoutingType": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "latitude": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "longitude": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "organization": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "organizationType": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "region": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "state": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "stateCf": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "stateCode": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in IPs array",
                                                        "properties": {
                                                            "address": {
                                                                "description": "address from RawEntity object in IPs array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in IPs array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "IPsCount": {
                                            "description": "Count of IPs processed by module",
                                            "type": "integer"
                                        },
                                        "IncidentARMId": {
                                            "description": "The ARM Id of the Azure Sentinel Incident",
                                            "type": "string"
                                        },
                                        "URLs": {
                                            "description": "Array of URLs",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in URLs array",
                                                        "properties": {
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in URLs array"
                                                            },
                                                            "url": {
                                                                "description": "url from RawEntity object in URLs array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "URLsCount": {
                                            "description": "Count of URLs processed by module",
                                            "type": "integer"
                                        },
                                        "WorkspaceId": {
                                            "description": "The Log Analytics Workspace Id of the Azure Sentinel Incident",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Response_-_API_Failure": {
                            "runAfter": {
                                "HTTP": [
                                    "Failed"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": {
                                    "Error": "@{parameters('PlaybookInternalName')} module failed to execute with status @{outputs('HTTP')['statusCode']}",
                                    "PlaybookName": "@{workflow()?['name']}",
                                    "PlaybookResourceId": "@{workflow()?['id']}",
                                    "PlaybookRunId": "@{workflow()?['run']?['name']}",
                                    "PlaybookVersion": "@parameters('PlaybookVersion')",
                                    "SourceError": "@body('HTTP')"
                                },
                                "statusCode": "@outputs('HTTP')['statusCode']"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "resourceID": {
            "type": "string",
            "value": "[resourceId('Microsoft.Logic/workflows', parameters('PlaybookName'))]"
        }
    }
}
