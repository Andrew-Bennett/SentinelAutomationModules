{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Get-AADUserRisksInfo",
            "type": "String"
        }
    },
    "variables": {
        "AzureSentinelConnectionName":"[concat('azuresentinel-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "triage": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "AddIncidentComments": {
                                            "title": "Add comments to the incident",
                                            "type": "boolean"
                                        },
                                        "Entities": {
                                            "description": "Click here and select the EnrichedEntities object from the Dynamic content menu",
                                            "type": "array"
                                        },
                                        "LookbackInDays": {
                                            "description": "Enter a value between 1 and 90",
                                            "maximum": 90,
                                            "minimum": 1,
                                            "title": "Lookback period in days",
                                            "type": "integer"
                                        },
                                        "MFAFailureLookup": {
                                            "title": "Look for failed MFA attempts",
                                            "type": "boolean"
                                        },
                                        "MFAFraudLookup": {
                                            "title": "Look for MFA Fraud reports",
                                            "type": "boolean"
                                        },
                                        "TIIPLookup": {
                                            "title": "Look for Azure AD Sign-in from IPs in TI",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Compose_response": {
                            "runAfter": {
                                "Create_CSV_table_to_calculate_HighestRiskLevel": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": {
                                "AnalyzedEntities": "@length(variables('DetailedResults'))",
                                "DetailedResults": "@variables('DetailedResults')",
                                "FailedMFATotalCount": "@variables('FailedMFATotalCount')",
                                "HighestRiskLevel": "@{if(contains(body('Create_CSV_table_to_calculate_HighestRiskLevel'), 'High'), 'High', if(contains(body('Create_CSV_table_to_calculate_HighestRiskLevel'), 'Medium'), 'Medium', if(contains(body('Create_CSV_table_to_calculate_HighestRiskLevel'), 'Low'), 'Low', if(contains(body('Create_CSV_table_to_calculate_HighestRiskLevel'), 'None'),'None','Unknown'))))}",
                                "MFAFraudTotalCount": "@variables('MFAFraudTotalCount')",
                                "RiskyIPTotalCount": "@variables('RiskyIPTotalCount')"
                            }
                        },
                        "Condition_-_Add_comment": {
                            "actions": {
                                "Add_comment_to_incident": {
                                    "runAfter": {
                                        "Create_HTML_table_for_comments": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@{triggerBody()?['Entities']['IncidentARMId']}",
                                            "message": "<p>Number of analyzed entities: @{length(variables('DetailedResults'))}<br>\nHighest risk level found: @{if(contains(body('Create_CSV_table_to_calculate_HighestRiskLevel'), 'High'), 'High', if(contains(body('Create_CSV_table_to_calculate_HighestRiskLevel'), 'Medium'), 'Medium', if(contains(body('Create_CSV_table_to_calculate_HighestRiskLevel'), 'Low'), 'Low', if(contains(body('Create_CSV_table_to_calculate_HighestRiskLevel'), 'None'),'None','Unknown'))))}<br>\nTotal failed MFA attempts: @{variables('FailedMFATotalCount')} (lookup enabled:@{triggerBody()?['MFAFailureLookup']})<br>\nTotal MFA fraud reports: @{variables('MFAFraudTotalCount')} (lookup enabled:@{triggerBody()?['MFAFraudLookup']})<br>\nTotal signins from IP matching TI: @{variables('RiskyIPTotalCount')} (lookup enabled:@{triggerBody()?['TIIPLookup']})<br>\n<br>\nDetailed results :&nbsp;@{if(equals(length(outputs('Compose_response')['DetailedResults']),0),'No results',body('Create_HTML_table_for_comments'))}<br>\n</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Create_HTML_table_for_comments": {
                                    "runAfter": {},
                                    "type": "Table",
                                    "inputs": {
                                        "format": "HTML",
                                        "from": "@outputs('Compose_response')['DetailedResults']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Compose_response": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['AddIncidentComments']",
                                            "@true"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_-_Terminate_if_no_supported_entities": {
                            "actions": {
                                "Response_-_Send_empty_results": {
                                    "runAfter": {},
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "body": {
                                            "AnalyzedEntities": 0,
                                            "DetailedResults": [],
                                            "FailedMFATotalCount": 0,
                                            "HighestRiskyLevel": 0,
                                            "MFAFraudTotalCount": 0,
                                            "RiskyIPTotalCount": 0
                                        },
                                        "schema": {
                                            "properties": {
                                                "AnalyzedEntities": {
                                                    "description": "Number of entities analyzed",
                                                    "type": "integer"
                                                },
                                                "DetailedResults": {
                                                    "description": "An array of details per user",
                                                    "items": {
                                                        "properties": {
                                                            "UserFailedMFACount": {
                                                                "type": "integer"
                                                            },
                                                            "UserId": {
                                                                "type": "string"
                                                            },
                                                            "UserMFAFraudsCount": {
                                                                "type": "integer"
                                                            },
                                                            "UserPrincipalName": {
                                                                "type": "string"
                                                            },
                                                            "UserRiskLevel": {
                                                                "type": "string"
                                                            },
                                                            "UserRiskyIPCount": {
                                                                "type": "integer"
                                                            },
                                                            "UserRiskyIPList": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "FailedMFATotalCount": {
                                                    "description": "Total of failed MFA found in TI for all entities",
                                                    "type": "integer"
                                                },
                                                "HighestRiskLevel": {
                                                    "description": "Highest risk level found for all the entities",
                                                    "type": "string"
                                                },
                                                "MFAFraudTotalCount": {
                                                    "description": "Total of MFA fraud reported for all entities",
                                                    "type": "integer"
                                                },
                                                "RiskyIPTotalCount": {
                                                    "description": "Total of signins from IPs found in TI for all entities",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "statusCode": 200
                                    }
                                },
                                "Terminate": {
                                    "runAfter": {
                                        "Response_-_Send_empty_results": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Terminate",
                                    "inputs": {
                                        "runStatus": "Succeeded"
                                    }
                                }
                            },
                            "runAfter": {},
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['Entities']['AccountsCount']",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Create_CSV_table_to_calculate_HighestRiskLevel": {
                            "runAfter": {
                                "For_each_account": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "columns": [
                                    {
                                        "header": "",
                                        "value": "@item()['UserRiskLevel']"
                                    }
                                ],
                                "format": "CSV",
                                "from": "@variables('DetailedResults')"
                            }
                        },
                        "Filter_array_-_Get_only_accounts_with_an_id": {
                            "runAfter": {
                                "Condition_-_Terminate_if_no_supported_entities": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@triggerBody()?['Entities']['Accounts']",
                                "where": "@not(equals(item()?['id'], null))"
                            }
                        },
                        "For_each_account": {
                            "foreach": "@body('Filter_array_-_Get_only_accounts_with_an_id')",
                            "actions": {
                                "Append_to_array_variable_DetailedResults": {
                                    "runAfter": {
                                        "Compose_DetailedResults": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "DetailedResults",
                                        "value": "@outputs('Compose_DetailedResults')"
                                    }
                                },
                                "Compose_DetailedResults": {
                                    "runAfter": {
                                        "Increment_variable_FailedMFATotalCount": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "UserFailedMFACount": "@coalesce(body('Select_failed_MFA')?[0]?['Count'],0)",
                                        "UserId": "@{items('For_each_account')['id']}",
                                        "UserMFAFraudsCount": "@coalesce(body('Select_MFA_frauds')?[0]?['Count'],0)",
                                        "UserPrincipalName": "@{coalesce(item()?['UserPrincipalName'],'Unknown')}",
                                        "UserRiskLevel": "@{coalesce(body('HTTP_-_Lookup_user_riskLevel')?['riskLevel'],'Unknown')}",
                                        "UserRiskyIPCount": "@coalesce(body('Select_failed_MFA')?[0]?['Count'],0)",
                                        "UserRiskyIPList": "@{coalesce(body('Select_failed_MFA')?[0]?['IPs'],'')}"
                                    }
                                },
                                "Condition_-_Failed_MFA_lookup": {
                                    "actions": {
                                        "Compose_KQL_for_Failed_MFA": {
                                            "runAfter": {},
                                            "type": "Compose",
                                            "inputs": "SigninLogs\n| where ResultType == \"500121\"\n| where UserId== \"@{items('For_each_account')['id']}\"\n| summarize Count=count() by UserPrincipalName"
                                        },
                                        "HTTP_-_Lookup_for_Failed_MFA": {
                                            "runAfter": {
                                                "Compose_KQL_for_Failed_MFA": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://api.loganalytics.io/",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "body": {
                                                    "query": "@{outputs('Compose_KQL_for_Failed_MFA')}",
                                                    "timespan": "P@{triggerBody()?['LookbackInDays']}D"
                                                },
                                                "method": "POST",
                                                "uri": "https://api.loganalytics.io/v1/workspaces/@{triggerBody()?['Entities']['WorkspaceId']}/query"
                                            }
                                        },
                                        "Select_failed_MFA": {
                                            "runAfter": {
                                                "HTTP_-_Lookup_for_Failed_MFA": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Select",
                                            "inputs": {
                                                "from": "@body('HTTP_-_Lookup_for_Failed_MFA')['tables'][0]['rows']",
                                                "select": {
                                                    "@{body('HTTP_-_Lookup_for_Failed_MFA')['tables'][0]['columns'][0]['name']}": "@item()[0]",
                                                    "@{body('HTTP_-_Lookup_for_Failed_MFA')['tables'][0]['columns'][1]['name']}": "@item()[1]"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@triggerBody()?['MFAFailureLookup']",
                                                    "@true"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_-_MFA_fraud_lookup": {
                                    "actions": {
                                        "Compose_KQL_for_MFA_frauds": {
                                            "runAfter": {},
                                            "type": "Compose",
                                            "inputs": "AuditLogs \n| where OperationName == \"Fraud reported - user is blocked for MFA\"\n| where ResultDescription == \"Successfully reported fraud\"\n| extend Id= tostring(parse_json(tostring(InitiatedBy.user)).id)\n| where Id == \"@{item()['id']}\"\n| summarize Count=count() by Id"
                                        },
                                        "HTTP_-_Lookup_for_MFA_frauds": {
                                            "runAfter": {
                                                "Compose_KQL_for_MFA_frauds": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://api.loganalytics.io",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "body": {
                                                    "query": "@{outputs('Compose_KQL_for_MFA_frauds')}",
                                                    "timespan": "P@{triggerBody()?['LookbackInDays']}D"
                                                },
                                                "method": "POST",
                                                "uri": "https://api.loganalytics.io/v1/workspaces/@{triggerBody()?['Entities']['WorkspaceId']}/query"
                                            }
                                        },
                                        "Select_MFA_frauds": {
                                            "runAfter": {
                                                "HTTP_-_Lookup_for_MFA_frauds": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Select",
                                            "inputs": {
                                                "from": "@body('HTTP_-_Lookup_for_MFA_frauds')['tables'][0]['rows']",
                                                "select": {
                                                    "@{body('HTTP_-_Lookup_for_MFA_frauds')['tables'][0]['columns'][0]['name']}": "@item()[0]",
                                                    "@{body('HTTP_-_Lookup_for_MFA_frauds')['tables'][0]['columns'][1]['name']}": "@item()[1]"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@triggerBody()?['MFAFraudLookup']",
                                                    "@true"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_-_TI_lookup": {
                                    "actions": {
                                        "Compose_KQL_filter_for_TI": {
                                            "runAfter": {},
                                            "type": "Compose",
                                            "inputs": "SigninLogs\n| where UserId =~ \"@{item()['id']}\"\n| distinct UserPrincipalName, IPAddress\n| join kind=leftouter (\nThreatIntelligenceIndicator\n| where TimeGenerated > ago( 14d )\n| where Active == true\n| summarize arg_max(TimeGenerated, *) by IndicatorId\n| extend IPAddress = coalesce(NetworkIP, NetworkSourceIP, NetworkDestinationIP)\n) on IPAddress\n| summarize Count = count(), IPList = make_set(IPAddress) by UserPrincipalName\n| extend IPs = strcat_array(IPList, \", \")\n| project UserPrincipalName, Count, IPs"
                                        },
                                        "HTTP_-_Lookup_TI": {
                                            "runAfter": {
                                                "Compose_KQL_filter_for_TI": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://api.loganalytics.io/",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "body": {
                                                    "query": "@{outputs('Compose_KQL_filter_for_TI')}",
                                                    "timespan": "P@{triggerBody()?['LookbackInDays']}D"
                                                },
                                                "method": "POST",
                                                "uri": "https://api.loganalytics.io/v1/workspaces/@{triggerBody()['Entities']['WorkspaceId']}/query"
                                            }
                                        },
                                        "Select_TI": {
                                            "runAfter": {
                                                "HTTP_-_Lookup_TI": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Select",
                                            "inputs": {
                                                "from": "@body('HTTP_-_Lookup_TI')['tables'][0]['rows']",
                                                "select": {
                                                    "@{body('HTTP_-_Lookup_TI')['tables'][0]['columns'][0]['name']}": "@item()[0]",
                                                    "@{body('HTTP_-_Lookup_TI')['tables'][0]['columns'][1]['name']}": "@item()[1]",
                                                    "@{body('HTTP_-_Lookup_TI')['tables'][0]['columns'][2]['name']}": "@item()[2]"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@triggerBody()?['TIIPLookup']",
                                                    "@true"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "HTTP_-_Lookup_user_riskLevel": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://graph.microsoft.com/",
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "method": "GET",
                                        "uri": "https://graph.microsoft.com/v1.0/identityProtection/riskyUsers/@{item()['id']}"
                                    }
                                },
                                "Increment_variable_FailedMFATotalCount": {
                                    "runAfter": {
                                        "Increment_variable_MFAFraudTotalCount": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "IncrementVariable",
                                    "inputs": {
                                        "name": "FailedMFATotalCount",
                                        "value": "@coalesce(body('Select_failed_MFA')?[0]?['Count'],0)"
                                    }
                                },
                                "Increment_variable_MFAFraudTotalCount": {
                                    "runAfter": {
                                        "Increment_variable_RiskyIPTotalCount": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "IncrementVariable",
                                    "inputs": {
                                        "name": "MFAFraudTotalCount",
                                        "value": "@coalesce(body('Select_MFA_frauds')?[0]?['Count'],0)"
                                    }
                                },
                                "Increment_variable_RiskyIPTotalCount": {
                                    "runAfter": {
                                        "Condition_-_Failed_MFA_lookup": [
                                            "Succeeded"
                                        ],
                                        "Condition_-_MFA_fraud_lookup": [
                                            "Succeeded"
                                        ],
                                        "Condition_-_TI_lookup": [
                                            "Succeeded"
                                        ],
                                        "HTTP_-_Lookup_user_riskLevel": [
                                            "Succeeded",
                                            "Failed"
                                        ]
                                    },
                                    "type": "IncrementVariable",
                                    "inputs": {
                                        "name": "RiskyIPTotalCount",
                                        "value": "@coalesce(body('Select_failed_MFA')?[0]?['Count'],0)"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_RiskyIPTotalCount": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_variable_DetailedResults": {
                            "runAfter": {
                                "Filter_array_-_Get_only_accounts_with_an_id": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "DetailedResults",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_FailedMFATotalCount": {
                            "runAfter": {
                                "Initialize_variable_DetailedResults": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "FailedMFATotalCount",
                                        "type": "integer",
                                        "value": 0
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_MFAFraudTotalCount": {
                            "runAfter": {
                                "Initialize_variable_FailedMFATotalCount": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "MFAFraudTotalCount",
                                        "type": "integer",
                                        "value": 0
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_RiskyIPTotalCount": {
                            "runAfter": {
                                "Initialize_variable_MFAFraudTotalCount": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "RiskyIPTotalCount",
                                        "type": "integer",
                                        "value": 0
                                    }
                                ]
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Condition_-_Add_comment": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": "@outputs('Compose_response')",
                                "schema": {
                                    "properties": {
                                        "AnalyzedEntities": {
                                            "description": "Number of entities analyzed",
                                            "type": "integer"
                                        },
                                        "DetailedResults": {
                                            "description": "An array of details per user",
                                            "items": {
                                                "properties": {
                                                    "UserFailedMFACount": {
                                                        "type": "integer"
                                                    },
                                                    "UserId": {
                                                        "type": "string"
                                                    },
                                                    "UserMFAFraudsCount": {
                                                        "type": "integer"
                                                    },
                                                    "UserPrincipalName": {
                                                        "type": "string"
                                                    },
                                                    "UserRiskLevel": {
                                                        "type": "string"
                                                    },
                                                    "UserRiskyIPCount": {
                                                        "type": "integer"
                                                    },
                                                    "UserRiskyIPList": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "FailedMFATotalCount": {
                                            "description": "Total of failed MFA found in TI for all entities",
                                            "type": "integer"
                                        },
                                        "HighestRiskLevel": {
                                            "description": "Highest risk level found for all the entities",
                                            "type": "string"
                                        },
                                        "MFAFraudTotalCount": {
                                            "description": "Total of MFA fraud reported for all entities",
                                            "type": "integer"
                                        },
                                        "RiskyIPTotalCount": {
                                            "description": "Total of signins from IPs found in TI for all entities",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "resourceID": {
            "type": "string",
            "value": "[resourceId('Microsoft.Logic/workflows', parameters('PlaybookName'))]"
        }
    }
}